다이나믹 프로그래밍 (=동적 계획법)
    '메모리를 적절히 사용하여 수행 시간 효율성을 비약적으로 향상시키는 방범'이다.
    '이미 계산된 결과(작은 문제)는 별도의 메모리 영역에 저장'하여 다시 계산하지 않도록 한다.
    다이나믹 프로그래밍의 구현은 일반적으로 두 가지 방식(탑다운(하향식)과 보텀업(상향식))으로 구성된다.

프로그래밍 분야의 "동적"(=프로그램이 실행되는 도중)
    자료구조에서 동적 할당은 '프로그램이 실행되는 동중에 실행에 필요한 메모리를 할당하는 기법이다.

반면 다이나믹 프로그래밍에서 다이나믹은 큰 의미가 없다.


다이나믹 프로그래밍의 사용 조건
    1. 최적 부분 구조(Optimal Substructure)
        큰 문제를 작은 문제로 나눌 수 있으며 작은 문제의 답을 모아서 큰 문제를 해결할 수 있다.
    2. 중복되는 부분 문제(Overlapping Subproblem)
        동일한 작은 문제를 반복적으로 해결해야 한다.


다이나믹 프로그래밍의 대표적 문제(피보나치 수열)
